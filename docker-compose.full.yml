# -*- coding: utf-8 -*-
#
# Copyright (C) 2020 CESNET.
#
# Oarepo Docker is free software; you can redistribute it and/or modify it
# under the terms of the MIT License; see LICENSE file for more details.
#
# Example of a full-stack production environment for Invenio.
#
# Usage::
#
#   $ docker-compose -f docker-compose.full.yml up -d
#
# This file is not intended to be used in production, but only serve as an
# example of a full production environment.
#
# Following services are included:
# - Load balancer: HAProxy (exposed ports: 80, 443, 8080)
# - Frontend server: Nginx (not exposed)
# - API application: UWSGI (not exposed)
# - Worker: Celery (not exposed)
# - Flower: Monitoring of Celery (exposed port: 5555)
# - Kibana: Inspect Elasticsearch (exposed port: 5601)
# - Cache: Redis (exposed port: 6379)
# - DB: (PostgresSQL/MySQL) (exposed port: 5432 or 3306)
# - Message queue: RabbitMQ (exposed ports: 5672, 15672)
# - Elasticsearch (exposed ports: 9200, 9300)
#
version: '2.3'
services:
  # Load balancer
  # http://127.0.0.1 (redirects to https)
  # https://127.0.0.1 (application)
  # http://127.0.0.1:8080 (HAProxy statistics)
  lb:
    extends:
      file: docker-services.yml
      service: lb
    links:
      - frontend
  # Frontend
  frontend:
    extends:
      file: docker-services.yml
      service: frontend
    volumes:
      - static_data:/opt/invenio/var/instance/static:ro
    links:
      - web-api
  # API Rest Application
  web-api:
    extends:
      file: docker-services.yml
      service: app
    image: oarepo:3.2.1-es7
    command: [ "uwsgi" ]
    environment:
      - "APP_ENABLE_SECURE_HEADERS=${APP_ENABLE_SECURE_HEADERS}"
      - "SERVER_NAME=${SERVER_NAME}"
      - "OAREPO_ADMIN_PASSWORD=${OAREPO_ADMIN_PASSWORD}"
      - "OAREPO_ADMIN_USER=${OAREPO_ADMIN_USER}"
      - "INVENIO_SQLALCHEMY_DATABASE_URI=${INVENIO_SQLALCHEMY_DATABASE_URI}"
      - "INVENIO_BROKER_URL=${INVENIO_BROKER_URL}"
      - "INVENIO_CELERY_BROKER_URL=${INVENIO_CELERY_BROKER_URL}"
      - "INVENIO_CACHE_TYPE=${INVENIO_CACHE_TYPE}"
      - "INVENIO_CACHE_REDIS_URL=${INVENIO_CACHE_REDIS_URL}"
      - "INVENIO_ACCOUNTS_SESSION_REDIS_URL=${INVENIO_ACCOUNTS_SESSION_REDIS_URL}"
      - "INVENIO_CELERY_RESULT_BACKEND=${INVENIO_CELERY_RESULT_BACKEND}"
      - "INVENIO_RATELIMIT_STORAGE_URL=${INVENIO_RATELIMIT_STORAGE_URL}"
      - "INVENIO_SEARCH_ELASTIC_HOSTS=${INVENIO_SEARCH_ELASTIC_HOSTS}"
    ports:
      - "5000"
    volumes:
      - uploaded_data:/opt/invenio/var/instance/data
      - archived_data:/opt/invenio/var/instance/archive
    links:
      - cache
      - es
      - mq
      - db
  # Worker
  worker:
    extends:
      file: docker-services.yml
      service: app
    restart: "always"
    environment:
      - "SERVER_NAME=${SERVER_NAME}"
      - "INVENIO_CELERY_LOG_LEVEL=${INVENIO_CELERY_LOG_LEVEL}"
      - "INVENIO_SQLALCHEMY_DATABASE_URI=${INVENIO_SQLALCHEMY_DATABASE_URI}"
      - "INVENIO_BROKER_URL=${INVENIO_BROKER_URL}"
      - "INVENIO_CELERY_BROKER_URL=${INVENIO_CELERY_BROKER_URL}"
      - "INVENIO_CACHE_TYPE=${INVENIO_CACHE_TYPE}"
      - "INVENIO_CACHE_REDIS_URL=${INVENIO_CACHE_REDIS_URL}"
      - "INVENIO_ACCOUNTS_SESSION_REDIS_URL=${INVENIO_ACCOUNTS_SESSION_REDIS_URL}"
      - "INVENIO_CELERY_RESULT_BACKEND=${INVENIO_CELERY_RESULT_BACKEND}"
      - "INVENIO_RATELIMIT_STORAGE_URL=${INVENIO_RATELIMIT_STORAGE_URL}"
      - "INVENIO_SEARCH_ELASTIC_HOSTS=${INVENIO_SEARCH_ELASTIC_HOSTS}"
    command: [ "celery" ]
    image: oarepo-worker
    links:
      - cache
      - es
      - mq
      - db
    volumes:
      - uploaded_data:/opt/invenio/var/instance/data
      - archived_data:/opt/invenio/var/instance/archive
  # Monitoring of Celery
  # http://127.0.0.1:5555
  flower:
    extends:
      file: docker-services.yml
      service: flower
    links:
      - mq
  # Inspect Elasticsearch indexes
  # http://127.0.0.1:5601
  kibana:
    extends:
      file: docker-services.yml
      service: kibana
    links:
      - es
  # Base services
  cache:
    extends:
      file: docker-services.yml
      service: cache
  db:
    extends:
      file: docker-services.yml
      service: db
  # http://guest:guest@127.0.0.1:15672
  mq:
    extends:
      file: docker-services.yml
      service: mq
  es:
    extends:
      file: docker-services.yml
      service: es7
volumes:
  static_data:
  uploaded_data:
  archived_data:
